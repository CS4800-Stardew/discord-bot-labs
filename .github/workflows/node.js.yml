name: Run Server EC2

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # - name: deploy backend file onto EC2 via SSH key
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ec2-user
      #     port: 22
      #     key: ${{ secrets.KEY }}
      #     source: "backend/"
      #     target: "~/"
      #     timeout: 120s

      - name: deploy backend file onto EC2 via SSH key
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ec2-user
          REMOTE_PORT: 22
          SOURCE: "backend/"
          TARGET: "~/backend/"

      - run: |
          cd frontend
          cd src
          cat <<< '{ "axiosBaseURL": "${{ secrets.AXIOSBASEURL }}" }' > dbl-config.json
          cd ..
          npm install
          CI=false npm run build

      # - name: deploy frontend build file onto EC2 via SSH key
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ec2-user
      #     port: 22
      #     key: ${{ secrets.KEY }}
      #     source: "frontend/build/"
      #     target: "~/"
      #     timeout: 120s

      - name: deploy frontend build file onto EC2 via SSH key
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ec2-user
          REMOTE_PORT: 22
          SOURCE: "frontend/build/"
          TARGET: "~/frontend/build/"

      - name: Run commands to start React and Express servers
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          port: 22
          key: ${{ secrets.KEY }}
          script: |
            killall node
            cd backend
            cat <<< '{ "jwtPrivateKey": "'${{ secrets.JWTPRIVATEKEY }}'", "db": "'${{ secrets.DB }}'", "port": "3900", "requiresAuth": true }' > default.json
            npm install
            nohup nodemon start > nohup.out 2> nohup.err < /dev/null &
            cd ..
            cd frontend
            nohup serve -s build > nohup.out 2> nohup.err < /dev/null &
